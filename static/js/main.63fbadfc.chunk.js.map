{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","Components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContentInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","showContactInfo","className","onClick","style","cursor","bind","float","color","NavLink","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","exact","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63fbadfc.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(\n                    contact =>\n                        contact.id === action.payload.id\n                            ? (contact = action.payload)\n                            : contact)\n            };\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component{\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer (state, action))\n\n    };\n\n    async componentDidMount() {\n        const res = await axios\n        .get('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({contacts: res.data});\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport {Consumer} from \"../../context\";\n\n\nclass Contact extends Component{\n\n    state = {\n        showContentInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        } catch (e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n\n\n    };\n\n    render() {\n        const {id, name, email, phone} = this.props.contact;\n        const { showContactInfo} = this.state;\n        return (\n            <Consumer>\n                {value => {\n\n                    const {dispatch} = value;\n                    return (\n                        <div className={\"card card-body mb-3\"}>\n                            <h4>{name}{' '}\n                                <i\n                                    onClick={() => this.setState({showContactInfo: !this.state.showContactInfo })}\n                                    className={\"fas fa-sort-down\"} style={{cursor: 'pointer'}}\n                                />\n                                <i\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                    className={\"fas fa-times\"} style={{cursor: 'pointer', float: 'right', color: 'red'}}\n                                />\n                                <NavLink className=\"nav-link\"  to={`contact/edit/${id}`}>\n                                    <i className=\"fas fa-pencil-alt\" style={{\n                                        cursor: 'pointer',\n                                        float: 'right',\n                                        color: 'black' ,\n                                        marginRight: '1rem'\n                                    }}>\n                                    </i>\n                                </NavLink>\n                            </h4>\n                            {showContactInfo ? (\n                                <ul className={\"list-group\"}>\n                                    <li className={\"list-group-item\"}>Email: {email}</li>\n                                    <li className={\"list-group-item\"}>Phone: {phone}</li>\n                                </ul>\n                            ) : null}\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n\n\n        )\n    }\n\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n};\nexport default Contact;\n\n","import React, {Component} from 'react';\nimport Contact from './Contact';\nimport  {Consumer} from '../../context';\n\n\nclass Contacts extends Component{\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className={\"text-danger\"}>Contact </span>\n                                List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n\n}\n\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n        label,\n        name,\n        value,\n        placeholder,\n        type,\n        onChange,\n        error\n    }) => {\n    return(\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames(\"form-control form-control-lg\",{\"is-invalid\" : error})}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            { error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from  \"../layout/TextInputGroup\"\nimport axios from 'axios';\n\n\nclass AddContact extends Component{\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const {name, email, phone} = this.state;\n\n        // check for errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\n\n        // clear form\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        // redirect\n        this.props.history.push('/');\n    };\n\n\n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                        <div className={\"card mb-3\"}>\n                            <div className={\"card-header\"}>\n                                Edit Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label={\"Name\"}\n                                        name={\"name\"}\n                                        placeholder={\"Enter Name\"}\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label={\"Email\"}\n                                        name={\"email\"}\n                                        type={\"email\"}\n                                        placeholder={\"Enter Email\"}\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label={\"Phone\"}\n                                        name={\"phone\"}\n                                        placeholder={\"Enter Phone\"}\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value={\"Add Contact\"} className={\"btn btn-light btn-block\"}/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\n\nexport default AddContact;\n","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from  \"../layout/TextInputGroup\"\nimport axios from 'axios';\n\n\nclass EditContact extends Component{\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount(){\n        const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const {name, email, phone} = this.state;\n\n        // check for errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const updateContact = {\n            name,\n            email,\n            phone\n        }\n        const {id} = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n        // clear form\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        // redirect\n        this.props.history.push('/');\n    };\n\n\n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                        <div className={\"card mb-3\"}>\n                            <div className={\"card-header\"}>\n                                Add Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label={\"Name\"}\n                                        name={\"name\"}\n                                        placeholder={\"Enter Name\"}\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label={\"Email\"}\n                                        name={\"email\"}\n                                        type={\"email\"}\n                                        placeholder={\"Enter Email\"}\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label={\"Phone\"}\n                                        name={\"phone\"}\n                                        placeholder={\"Enter Phone\"}\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value={\"Update Contact\"} className={\"btn btn-light btn-block\"}/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\n\nexport default EditContact;\n","import  React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\n\nconst  Header = props => {\n    const {branding} = props;\n    return(\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" exact to=\"/\"> <i className=\"fas fa-home\"> Home </i></NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" exact to=\"/contact/add\"> <i className=\"fas fa-plus\"> Add </i></NavLink>\n\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" exact to=\"/about\"> <i className=\"fas fa-question\"> About </i></NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\nHeader.defaultProps = {\n    branding: \"My App\"\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\n\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className={\"display-4\"}> About Contact Manager</h1>\n            <p className={\"lead\"}>Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n};\n\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className={\"display-4\"}> <span className={\"text-danger\"}> 404 </span> Page not found</h1>\n            <p className={\"lead\"}>Sorry, that page does not exist</p>\n        </div>\n    )\n};","import React, {Component} from 'react';\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    };\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(data =>\n                this.setState({\n                title: data.title,\n                body: data.body\n                })\n            )\n    }\n\n    // componentWillMount() {\n    //     console.log('componentWillMount');\n    // }\n    //\n    // componentDidUpdate() {\n    //     console.log('componentDidUpdate');\n    // }\n    //\n    // componentWillUpdate() {\n    //     console.log('componentWillUpdate');\n    // }\n    //\n    // componentWillReceiveProps(nextProps, nextState) {\n    //     console.log('componentWillRecieveProps');\n    // }\n    //\n    // static getDerivedStateFromProps(nextProps, prevState){\n    //     return null;\n    // }\n    //\n    // getSnapshotBeforeUpdate(prevProps, prevState){\n    //     console.log('getSnapshotBeforeUpdate');\n    // }\n\n    render(){\n        const {title, body} = this.state;\n        return (\n\n            <div>\n                <h1 className={\"display-4\"}> {title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Provider} from './context';\n\nimport Contacts from './Components/contacts/Contacts';\nimport AddContact from \"./Components/contacts/AddContact\";\nimport EditContact from \"./Components/contacts/EditContact\";\nimport Header from './Components/layout/Header';\nimport About from './Components/pages/About';\nimport NotFound from \"./Components/pages/NotFound\";\nimport Test from \"./Components/test/Test\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n              <div className=\"App\">\n                <Header branding={\"Contact Manager\"} />\n                  <div className=\"container\">\n                      <Switch>\n                          <Route exact path={\"/\"} component={Contacts}/>\n                          <Route exact path={\"/contact/add\"} component={AddContact}/>\n                          <Route exact path={\"/contact/edit/:id\"} component={EditContact}/>\n                          <Route exact path={\"/about\"} component={About}/>\n                          <Route exact path={\"/test\"} component={Test}/>\n                          <Route component={NotFound}/>\n                      </Switch>\n                  </div>\n              </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}